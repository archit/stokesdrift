
// Apply plugins
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'

dependencies {
  compile 'javax.enterprise:cdi-api:1.1'

  // compile "com.zaxxer:HikariCP:1.3.8"
  compile "org.yaml:snakeyaml:1.14"
  compile "org.jruby:jruby-complete:1.7.13"
  compile "io.undertow:undertow-core:1.0.1.Final"
  compile "io.undertow:undertow-servlet:1.0.1.Final"
  compile "org.quartz-scheduler:quartz:2.2.1"
  compile "org.jboss.weld.se:weld-se-core:2.2.4.Final"
  compile "org.jruby.rack:jruby-rack:1.1.14"

  testCompile 'junit:junit:4.11'

}

buildscript {
  repositories {
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
  }
}

// loadProperties("${System.getProperty('user.home')}/.gradle/gradle.properties")
loadProperties("build.properties")

defaultTasks = ['assemble']

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
  mavenLocal()
  maven { url 'http://deux.gemjars.org' }
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  mavenCentral()
}


sourceSets {
  main {
    compileClasspath = compileClasspath
  }
}

artifacts {
}



def loadProperties(String sourceFileName) {
  def config = new Properties()
  def propFile = new File(sourceFileName)
  if (propFile.canRead()) {
    config.load(new FileInputStream(propFile))
    for (Map.Entry property in config) {
      project.ext[property.key] = property.value;
    }
  }
}